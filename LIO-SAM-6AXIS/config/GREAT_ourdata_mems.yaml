lio_sam_6axis:

  #  velodyne16 and stim300(6 axis)

  # Topics
  pointCloudTopic: "/points_raw"               # Point cloud data
  roadSidePointTopic: "/90m_velodyne_points"   # Road side point cloud data
  imuTopic: "/imu_raw"                         # IMU data
  odomTopic: "odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
  gpsTopic: "/gps/fix"                   # GPS odometry topic from navsat, see module_navsat.launch file

  # Frames
  lidarFrame: "base_link"
  baselinkFrame: "base_link"
  odometryFrame: "odom"
  mapFrame: "map"

  # GPS Settings
  useGPS: true
  updateOrigin: true                          # when you can not get a reliable gps origin points(RTK fixed)
  gpsFrequence: 10                            # set proper gps frequence to align gps and lidar timestamp
  useImuHeadingInitialization: true         # if using GPS data, set to "false"  不用gps时为true，初始航向角不会置为0了，从cloudInfo.imuYawInit中获取
  useGpsElevation: true                      # if GPS elevation is bad, set to "false"
  gpsCovThreshold: 8                        # m^2, threshold for using GPS data
  poseCovThreshold: 25.0                      # m^2, threshold for using GPS data
  gpsDistance: 0.5                           # the distance between two gps point used for optimization

  # debug setting
  debugLidarTimestamp: false
  debugImu: false
  debugGps: false

  # Export settings
  savePCD: false                              # https://github.com/TixiaoShan/LIO-SAM/issues/3
  savePCDDirectory: "/Downloads/LOAM/"        # actually we do not use the floder to save maps

  sensor: velodyne                            # lidar sensor type, 'velodyne' or 'ouster' or 'livox' or 'hesai'
  N_SCAN: 32                                  # number of lidar channel (i.e., Velodyne/Ouster: 16, 32, 64, 128, Livox Horizon: 6)
  Horizon_SCAN: 1800                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048, Livox Horizon: 4000)
  downsampleRate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1
  lidarMinRange: 1.5                          # default: 1.0, minimum lidar range to be used
  lidarMaxRange: 1000.0

  # IMU Settings
  imuAccNoise: 3.9939570888238808e-03
  imuGyrNoise: 1.5636343949698187e-03
  imuAccBiasN: 6.4356659353532566e-05
  imuGyrBiasN: 3.5640318696367613e-05
  imuGravity: 9.80511
  imuRPYWeight: 0.01
  imuAngularIsDegree: true
  imuAccelerIsG: false

  # RoadSide Settings
  useRoadSide: true # 当useRoadSide置为true时，后端才会考虑加入路侧lidar的约束
  debugRoadSide: true
  uesInitialVehiclePose: false   # 确定是否要用初始位置进行初始化，车辆的初始位置是从IE的ros服务中获取的
  debugInitialVehiclePose: false # 当使用初始位置时，打印对应的日志 调试关键帧信息

  roadSensor: velodyne
  roadCloudDs: 0.2 # 路侧点云和车载点云降采样的尺度
  roadTranslationErrorThreshold: 1.0 # 路侧lidar和车载lidar配准后的平移误差阈值 单位为米
  roadRotationErrorThreshold: 5.0    # 路侧lidar和车载lidar配准后的旋转误差阈值 单位为度
  toleranceTime: 0.04               # 路侧lidar和车载lidar配准的时间差阈值,就是配准的结果和当前帧结果可以容忍的时间，单位为秒
  rangeRoadVehicleThr: 50          # 路侧lidar和车载lidar配准的距离阈值，单位为米
  # 路侧Lidar和n系的变换矩阵, roadSide frame to n frame
  T_nRoadLidar:  [-0.989779,  0.101124, -0.100557, 50.148455,
                  -0.086973, -0.986838, -0.136332, 34.124473,
                  -0.11302,  -0.126193,  0.985546,  4.181041,
                  0.0   ,     0.0   ,     0.0 ,       1.0    ]


  # Extrinsics
  imu_type: 0   # 0: 6axis, 1:9 axis
  # lidar frame to imu frame  在lidar坐标系下,imu原点的位置  这个别人觉得也是imu frame to lidar frame，我是不是写错了？
  extrinsicTrans: [0.02,  -0.25, -0.4]
  # imu frame to lidar frame
  extrinsicRot:  [ 0.999817497860517,0.018112103798910352,0.006049795816253419,
                  -0.018142554229753124,0.9998229728631094,0.005012995213086027,
                  -0.0059579271855445875,-0.005121833958012544,0.9999694237453087]
  extrinsicRPY: [ 1, 0, 0,
                  0, 1, 0,
                  0, 0, 1 ]

  # LOAM feature threshold
  edgeThreshold: 1.0
  surfThreshold: 0.1
  edgeFeatureMinValidNum: 10
  surfFeatureMinValidNum: 100

  # voxel filter paprams
  odometrySurfLeafSize: 0.4                     # default: 0.4 - outdoor, 0.2 - indoor
  mappingCornerLeafSize: 0.2                    # default: 0.2 - outdoor, 0.1 - indoor
  mappingSurfLeafSize: 0.4                      # default: 0.4 - outdoor, 0.2 - indoor

  # robot motion constraint (in case you are using a 2D robot)
  z_tollerance: 1000                            # meters
  rotation_tollerance: 1000                     # radians

  # CPU Params
  numberOfCores: 64                             # number of cores for mapping optimization
  mappingProcessInterval: 0.0                   # seconds, regulate mapping frequency

  # Surrounding map 修改关键帧的阈值，使其能够以更高的频率添加关键帧，也就是0.1秒添加一个关键帧
  surroundingkeyframeAddingDistThreshold: -10   # meters, regulate keyframe adding threshold
  surroundingkeyframeAddingAngleThreshold: -10  # radians, regulate keyframe adding threshold
  surroundingKeyframeDensity: 0.1               # meters, downsample surrounding keyframe poses   
  surroundingKeyframeSearchRadius: 50.0         # meters, within n meters scan-to-map optimization (when loop closure disabled)

  # Loop closure
  loopClosureEnableFlag: true
  loopClosureFrequency: 1.0                     # Hz, regulate loop closure constraint add frequency
  surroundingKeyframeSize: 30                   # submap size (when loop closure enabled)
  historyKeyframeSearchRadius: 30.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
  historyKeyframeSearchTimeDiff: 40.0           # seconds, key frame that is n seconds older will be considered for loop closure
  historyKeyframeSearchNum: 25                  # number of hostory key frames will be fused into a submap for loop closure
  historyKeyframeFitnessScore: 0.9              # icp threshold, the smaller the better alignment

  # Visualization
  globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
  globalMapVisualizationPoseDensity: 10.0       # meters, global map visualization keyframe density
  globalMapVisualizationLeafSize: 0.5           # meters, global map visualization cloud density


  # mapping
  globalMapLeafSize: 0.6                        # saved map voxgrid size


# Navsat (convert GPS coordinates to Cartesian)
#navsat:
#  frequency: 50
#  wait_for_datum: false
#  delay: 0.0
#  magnetic_declination_radians: 0
#  yaw_offset: 0
#  zero_altitude: true
#  broadcast_utm_transform: false
#  broadcast_utm_transform_as_parent_frame: false
#  publish_filtered_gps: false
#
## EKF for Navsat
#ekf_gps:
#  publish_tf: false
#  map_frame: map
#  odom_frame: odom
#  base_link_frame: base_link
#  world_frame: odom
#
#  frequency: 50
#  two_d_mode: false
#  sensor_timeout: 0.01
#  # -------------------------------------
#  # External IMU:
#  # -------------------------------------
#  imu0: imu_correct
#  # make sure the input is aligned with ROS REP105. "imu_correct" is manually transformed by myself. EKF can also transform the data using tf between your imu and base_link
#  imu0_config: [ false, false, false,
#                 true,  true,  true,
#                 false, false, false,
#                 false, false, true,
#                 true,  true,  true ]
#  imu0_differential: false
#  imu0_queue_size: 50
#  imu0_remove_gravitational_acceleration: true
#  # -------------------------------------
#  # Odometry (From Navsat):
#  # -------------------------------------
#  odom0: odometry/gps
#  odom0_config: [ true,  true,  true,
#                  false, false, false,
#                  false, false, false,
#                  false, false, false,
#                  false, false, false ]
#  odom0_differential: false
#  odom0_queue_size: 10
#
#  #                            x     y     z     r     p     y   x_dot  y_dot  z_dot  r_dot p_dot y_dot x_ddot y_ddot z_ddot
#  process_noise_covariance: [ 1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
#                              0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
#                              0,    0,    10.0, 0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
#                              0,    0,    0,    0.03, 0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
#                              0,    0,    0,    0,    0.03, 0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
#                              0,    0,    0,    0,    0,    0.1,  0,     0,     0,     0,    0,    0,    0,    0,      0,
#                              0,    0,    0,    0,    0,    0,    0.25,  0,     0,     0,    0,    0,    0,    0,      0,
#                              0,    0,    0,    0,    0,    0,    0,     0.25,  0,     0,    0,    0,    0,    0,      0,
#                              0,    0,    0,    0,    0,    0,    0,     0,     0.04,  0,    0,    0,    0,    0,      0,
#                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0.01, 0,    0,    0,    0,      0,
#                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0.01, 0,    0,    0,      0,
#                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0.5,  0,    0,      0,
#                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0.01, 0,      0,
#                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0.01,   0,
#                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0.015 ]
